package com.mvc.controller;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.jsp.PageContext;

import com.mvc.biz.MVCBoardBiz;
import com.mvc.biz.MVCBoardBizImpl;
import com.mvc.dto.MVCBoardDto;



/**
 * Servlet implementation class Myservlet
 */
@WebServlet("/Myservlet")
public class Myservlet extends HttpServlet { 
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public Myservlet() {
        super();
    }

	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		doPost(request, response);
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		request.setCharacterEncoding("UTF-8");
	    response.setContentType("text/html; charset=UTF-8");
	    
	    MVCBoardBiz biz = new MVCBoardBizImpl();
	    
	    String command = request.getParameter("command");
	    System.out.println("["+command+"]");
	    if(command.equals("list")) {
	    	
	    	//1. 보내준 값 있으면 받기
	    	//2. db 호출(전달 할 값 있으면 전달해야함) 
	    	List<MVCBoardDto> list = biz.selectlist();
	    	//3. 화면에 보내줄 값 있으면 request 객체에 담기
	    	
	    	request.setAttribute("list", list);
	    	//4. 보내기 
	    	dispatch(request, response, "mylist.jsp");
	    }else if(command.equals("insertform")) {
	    	//1.
	    	//2.
	    	//3.
	    	//4.
	    	response.sendRedirect("myinsert.jsp");
	    }else if(command.equals("insertres")) {
	    	
	    	String writer = request.getParameter("writer");
	    	String title = request.getParameter("title");
	    	String content = request.getParameter("content");
	    	
	    	//2.
	    	MVCBoardDto dto = new MVCBoardDto(writer, title, content);
	    	int res = biz.insert(dto);
	    	
	    	//3.
	    	
	    	//4.
	    	
	    	if(res>0) {
	    		//request.setAttribute("list", biz.selectlist());
	    		//dispatch(request, response, "mylist.jsp"); 이렇게 하면 request와 response가 그대로 남아 새로고침할때마다 글작성이 된다 
	    		response.sendRedirect("Myservlet.do?command=list");
	    	}else {
	    		//response.sendRedirect("myinsert.jsp");
	    		response.sendRedirect("Myservlet.do?command=insertform");
	    	}
	    	
	    }else if(command.equals("select")) {
	    	int seq = Integer.parseInt(request.getParameter("seq"));
	    	MVCBoardDto dto = biz.selectOne(seq);
	    	request.setAttribute("dto", dto);
	    	dispatch(request, response, "myselect.jsp");
	 	
	    }else if(command.equals("updateform")) {
	    	int seq = Integer.parseInt(request.getParameter("seq"));
	    	MVCBoardDto dto = biz.selectOne(seq);
	    	request.setAttribute("dto", dto);
	    	dispatch(request, response, "myupdate.jsp");
	    }else if(command.equals("updateres")) {
	    	int seq = Integer.parseInt(request.getParameter("seq"));
	    	String title = request.getParameter("title");
	    	String content = request.getParameter("content");
	    	
	    	MVCBoardDto dto = new MVCBoardDto();
	    	dto.setTitle(title);
	    	dto.setSeq(seq);
	    	dto.setContent(content);
	    	
	    	int res = biz.update(dto);
	    	if(res>0) {
	    		response.sendRedirect("Myservlet.do?command=updateform");
	    	}else {
	    		
	    	}
	    }
	    
	}
	
	
	public void dispatch(HttpServletRequest request, HttpServletResponse response, String path) throws ServletException, IOException {
		RequestDispatcher dispatch = request.getRequestDispatcher(path);
		dispatch.forward(request, response);
	}

}
